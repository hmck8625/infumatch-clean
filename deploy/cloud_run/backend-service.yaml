# =============================================================================
# Cloud Run バックエンドサービス設定
# =============================================================================
# FastAPI アプリケーション用の Cloud Run 設定

apiVersion: serving.knative.dev/v1
kind: Service
metadata:
  name: infumatch-backend
  namespace: hackathon-462905
  labels:
    cloud.googleapis.com/location: asia-northeast1
    app: infumatch
    tier: backend
  annotations:
    run.googleapis.com/client-name: gcloud
    run.googleapis.com/client-version: 458.0.1
    run.googleapis.com/ingress: all
    run.googleapis.com/ingress-status: all
    autoscaling.knative.dev/maxScale: "10"
    autoscaling.knative.dev/minScale: "0"
spec:
  template:
    metadata:
      labels:
        app: infumatch
        tier: backend
      annotations:
        autoscaling.knative.dev/maxScale: "10"
        autoscaling.knative.dev/minScale: "0"
        run.googleapis.com/cpu-throttling: "true"
        run.googleapis.com/execution-environment: gen2
    spec:
      containerConcurrency: 80
      timeoutSeconds: 300
      serviceAccountName: hackathon-462905@appspot.gserviceaccount.com
      containers:
      - name: infumatch-backend
        image: asia-northeast1-docker.pkg.dev/hackathon-462905/infumatch/backend:latest
        ports:
        - name: http1
          containerPort: 8000
        env:
        - name: GOOGLE_CLOUD_PROJECT_ID
          value: "hackathon-462905"
        - name: GOOGLE_CLOUD_REGION
          value: "asia-northeast1"
        - name: FIRESTORE_DATABASE_ID
          value: "(default)"
        - name: YOUTUBE_API_KEY
          valueFrom:
            secretKeyRef:
              key: latest
              name: youtube-api-key
        - name: GEMINI_API_KEY
          valueFrom:
            secretKeyRef:
              key: latest
              name: gemini-api-key
        - name: LOG_LEVEL
          value: "INFO"
        - name: CORS_ORIGINS
          value: '["https://infumatch.vercel.app","http://localhost:3000"]'
        resources:
          limits:
            cpu: "2"
            memory: "2Gi"
          requests:
            cpu: "0.5"
            memory: "512Mi"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        startupProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 6
  traffic:
  - percent: 100
    latestRevision: true